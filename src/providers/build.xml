<!-- ================ Build for Intalio JMS using Ant 1.3 ================= -->
<!-- $Id: build.xml,v 1.5 2001/11/19 04:25:39 tima Exp $ -->
<!-- ====================================================================== -->

<project name="jmscts" default="targets" basedir="..">

  <!-- ==================================================================== -->
  <!--                            Properties                                -->
  <!-- ==================================================================== -->
  <!-- main directories -->
  <property name="source" value="src"/>
  <property name="source.etc" value="${source}/etc"/>
  <property name="source.providers" value="${source}/providers"/>
  <property name="build" value="build"/>
  <property name="lib" value="lib"/>
  <property name="classes" value="${build}/classes"/>
  <property name="classes.debug" value="${build}/debug"/>
  <property name="config" value="config"/>
  <property file="${source.etc}/build.properties" />
  <property name="build.compiler" value="modern" />
  <property name="debug" value="on" />
  <property name="deprecation" value="off" />
  <property name="optimization" value="off" />
  <property environment="env"/>


  <!-- ==================================================================== -->
  <!--               The classpath used to build the project                -->
  <!-- ==================================================================== -->
  <path id="project.class.path">
    <pathelement path="${lib}/${project.jar.adaptx}" />
    <pathelement path="${lib}/${project.jar.castor}" />
    <pathelement path="${lib}/${project.jar.exolabcore}" />
    <pathelement path="${lib}/${project.jar.jms}" />
    <pathelement path="${lib}/${project.jar.jmscts}" />
    <pathelement path="${lib}/${project.jar.jndi}" />
    <pathelement path="${lib}/${project.jar.junit}" />
    <pathelement path="${lib}/${project.jar.log4j}" />
    <pathelement path="${lib}/${project.jar.xerces}" />
    <pathelement path="${provider.jars}" />
  </path>

  <!-- ==================================================================== -->
  <!--               The classpath used to test the project                 -->
  <!-- ==================================================================== -->
  <path id="project.test.path">
    <path refid="project.class.path" />
    <pathelement path="${classes}" />
  </path>


  <!-- ==================================================================== -->
  <!--                       Display all the targets                        -->
  <!-- ==================================================================== -->
  <target name="targets" description="Display all the targets">
    <echo><![CDATA[
    *************************************************************************
     ANT 1.3 build for JMS Compliance Test Suite version 0.1

     The following targets are available:

     targets        Display all the targets
     clean          Clean the build directory
     openjms        Builds the proxy interface to the OpenJMS provider
     openjmstests   Runs test cases against the OpenJMS provider. Eg
                    build.sh openjmstests -Dclass.name=com.intalio.jms.test.X
    *************************************************************************
        ]]>
    </echo>
  </target>


  <!-- ==================================================================== -->
  <!--                    Prepare target directories                        -->
  <!-- ==================================================================== -->
  <target name="prepare">
    <mkdir dir="${classes}"/>
    <mkdir dir="${classes.debug}"/>
    <tstamp/>
  </target>

  <!-- ==================================================================== -->
  <!--                      Clean the build directory                       -->
  <!-- ==================================================================== -->
  <target name="clean" 
          description="Clean the build directory">
    <delete dir="${build}" />
  </target>


  <!-- ==================================================================== -->
  <!--                    Generate the test scripts                         -->
  <!-- ==================================================================== -->
  <target name="scripts">
    <copy todir="." overwrite="true">
      <fileset dir="${source.providers}" includes="*.bat,*.sh" />
    </copy>

    <replace dir="." includes="*.bat,*.sh">
      <replacefilter token="$$PROVIDER_JARS$$" value="${provider.jars}" />
      <replacefilter token="$$TEST_JVMARGS$$" value="${test.jvmargs}" />
    </replace>
  </target>


  <!-- ==================================================================== -->
  <!--                         Build a package                              -->
  <!-- This requires the following arguments:                               -->
  <!-- . dir          - the source directory                                -->
  <!-- and may take the following optional parameters:                      -->
  <!-- . debug        - if on, include debug information                    -->
  <!-- . deprecation  - if on, show deprecation information                 -->
  <!-- . optimization - if on, compile the sources with optimization        -->
  <!-- ==================================================================== -->
  <target name="build" depends="prepare,scripts"
          description="Build a package">

    <javac srcdir="${dir}" 
           destdir="${classes}" 
           includes="**/*.java" 
           excludes="**/package.html"
	   debug="${debug}" 
           deprecation="${deprecation}"
           optimize="${optimization}">
      <classpath refid="project.class.path" />
    </javac>

  </target>


  <!-- ==================================================================== -->
  <!--                Runs the compliance tests with a filter               -->
  <!-- ==================================================================== -->
  <target name="testfilter" if="filter">
    <mkdir dir="coverage" />
    <java classname="${class.name}" fork="yes">
      <jvmarg value="-Djava.security.policy=${source.etc}/jmscts.policy" />
      <jvmarg value="-Dopenjms.home=${env.OPENJMS_HOME}"/>
      <arg line="-config ${proxy} -output . -filter ${filter}" />
      <classpath>
        <path refid="project.test.path" />
      </classpath>  
    </java>
  </target>


  <!-- ==================================================================== -->
  <!--              Runs the compliance tests without a filter              -->
  <!-- ==================================================================== -->
  <target name="testnofilter" unless="filter">
    <mkdir dir="coverage" />
    <java classname="${class.name}" fork="yes">
      <jvmarg line="-Djava.security.policy=${source.etc}/jmscts.policy" />
      <jvmarg value="-Dopenjms.home=${env.OPENJMS_HOME}"/>
      <arg line="-config ${proxy} -output ." />
      <classpath>
        <path refid="project.test.path" />
      </classpath>  
    </java>
  </target>


  <!-- ==================================================================== -->
  <!--                    Runs the compliance test suite                    -->
  <!-- ==================================================================== -->
  <target name="testall" unless="class.name">
    <antcall target="testsome">
      <param name="class.name" 
             value="com.intalio.jms.test.compliance.ComplianceTestSuite" />
    </antcall>
  </target>


  <!-- ==================================================================== -->
  <!--                 Runs part of the compliance test suite               -->
  <!-- ==================================================================== -->
  <target name="testsome" if="class.name">
    <antcall target="testfilter" />
    <antcall target="testnofilter" />
  </target>


  <!-- ==================================================================== -->
  <!--                      Runs the compliance tests                       -->
  <!-- ==================================================================== -->
  <target name="test" depends="testsome,testall" />
     
  <!-- ==================================================================== -->
  <!--                Verifies the OpenJMS environment is set               -->
  <!-- ==================================================================== -->
  <target name="openjmsenv" unless="env.OPENJMS_HOME">
    <fail message="OPENJMS_HOME environment variable not set" />
  </target>

  <!-- ==================================================================== -->
  <!--             Build the openjms package (including debugging info)     -->
  <!-- ==================================================================== -->
  <target name="openjms"
          description="Build the openjms package (including debugging info)">
    <antcall target="build">
      <param name="dir" value="${source}/providers/openjms" />
    </antcall>
  </target>


  <!-- ==================================================================== -->
  <!--              Runs test cases against the OpenJMS provider            -->
  <!-- ==================================================================== -->
  <target name="openjmstests"
          depends="openjms,openjmsenv"
          description="runs a test against the OpenJMS provider">
    <antcall target="test">
      <param name="proxy"
             value="${source}/providers/openjms/config/openjms.xml" />
    </antcall>
  </target>

</project>
