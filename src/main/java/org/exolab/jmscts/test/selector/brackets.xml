<selectors>

  <selector name="true bracket expression 1" selects="all">
    <requirementId>selector.expression</requirementId>
    <expression>(true)</expression>
  </selector>

  <selector name="false bracket expression 1" selects="none">
    <requirementId>selector.expression</requirementId>
    <expression>(false)</expression>
  </selector>

  <selector name="true bracket expression 2" selects="all">
    <requirementId>selector.evaluation.order</requirementId>
    <requirementId>selector.expression</requirementId>
    <expression>2 * (0 + 1) = 2</expression>
  </selector>

  <selector name="false bracket expression 2" selects="none">
    <requirementId>selector.evaluation.order</requirementId>
    <requirementId>selector.expression</requirementId>
    <expression>2 * (0 + 1) = 0</expression>
  </selector>

  <selector name="true bracket expression 3" selects="all">
    <requirementId>selector.evaluation.order</requirementId>
    <requirementId>selector.expression</requirementId>
    <expression>2.0 = 2.0 * (0.0 + 1.0)</expression>
  </selector>

  <selector name="true bracket expression 4" selects="all">
    <requirementId>selector.evaluation.order</requirementId>
    <requirementId>selector.expression</requirementId>
    <expression>true and (false or true)</expression>
  </selector>

  <selector name="false bracket expression 3" selects="none">
    <requirementId>selector.evaluation.order</requirementId>
    <requirementId>selector.expression</requirementId>
    <expression>true and (false or true) = false</expression>
  </selector>

  <selector name="true bracket expression 5" selects="all">
    <requirementId>selector.evaluation.order</requirementId>
    <requirementId>selector.expression</requirementId>
    <expression>(true and (false or true)) = (true)</expression>
  </selector>

  <selector name="true bracket expression 6" selects="all">
    <requirementId>selector.evaluation.order</requirementId>
    <requirementId>selector.expression</requirementId>
    <expression>3 * ((2 * 3) + 1) = 21</expression>
  </selector>

  <selector name="true bracket expression 7" selects="all">
    <requirementId>selector.evaluation.order</requirementId>
    <requirementId>selector.expression</requirementId>
    <expression>21 = 3 * ((2 * 3) + 1)</expression>
  </selector>

  <selector name="true bracket expression 8" selects="all">
    <requirementId>selector.evaluation.order</requirementId>
    <requirementId>selector.expression</requirementId>
    <expression>3 * 7= 3 * ((2 * 3) + 1)</expression>
  </selector>

  <selector name="invalid bracket expression 1" selects="none" valid="false">
    <requirementId>selector.validation</requirementId>
    <expression>(true</expression>
  </selector>

  <selector name="invalid bracket expression 2" selects="none" valid="false">
    <requirementId>selector.validation</requirementId>
    <expression>true)</expression>
  </selector>

  <selector name="invalid bracket expression 3" selects="none" valid="false">
    <requirementId>selector.validation</requirementId>
    <expression>(3 * 2 = 6</expression>
  </selector>

  <selector name="invalid bracket expression 4" selects="none" valid="false">
    <requirementId>selector.validation</requirementId>
    <expression>(1)</expression>
  </selector>

  <selector name="invalid bracket expression 5" selects="none" valid="false">
    <requirementId>selector.validation</requirementId>
    <expression>(1.0)</expression>
  </selector>

  <selector name="invalid bracket expression 6" selects="none" valid="false">
    <requirementId>selector.validation</requirementId>
    <expression>('abc')</expression>
  </selector>

</selectors>
